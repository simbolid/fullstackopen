{"version":3,"sources":["components/Form.js","components/Persons.js","components/Filter.js","components/Notification.js","services/contactService.js","App.js","index.js"],"names":["Form","props","onSubmit","handleSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","name","number","onClick","handleDelete","Persons","persons","filter","toLowerCase","includes","map","Filter","handleFilterChange","Notification","message","style","isError","className","baseUrl","functions","getAll","axios","get","then","response","data","create","newObject","post","_delete","objectToDelete","url","id","delete","update","put","App","useState","contacts","setContacts","setNewName","setNewNumber","setFilter","setMessage","setIsError","useEffect","contactService","event","preventDefault","newContact","alert","some","contact","find","window","confirm","returnedContact","setTimeout","catch","error","console","log","status","concat","target","toDelete","newContacts","ReactDOM","render","document","getElementById"],"mappings":"6KAUeA,EARF,SAACC,GAAD,OACX,uBAAMC,SAAUD,EAAME,aAAtB,UACE,yCAAW,uBAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,sBACxD,2CAAa,uBAAOH,MAAOH,EAAMO,UAAWF,SAAUL,EAAMQ,wBAC5D,8BAAK,wBAAQC,KAAK,SAAb,uBCJHC,EAAS,SAACV,GAAD,OACb,gCACGA,EAAMW,OAAOC,KADhB,IACuBZ,EAAMW,OAAOE,OADpC,IAC4C,wBAAQV,MAAOH,EAAMW,OAAOC,KAAME,QAASd,EAAMe,aAAjD,wBAa/BC,EATC,SAAChB,GACf,IAAMiB,EAAUjB,EAAMiB,QAChBC,EAASlB,EAAMkB,OAAOC,cAC5B,OACEF,EAAQC,QAAO,SAAAP,GAAM,OAAIA,EAAOC,KAAKO,cAAcC,SAASF,MACpDG,KAAI,SAAAV,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,EAAQI,aAAcf,EAAMe,cAAjDJ,EAAOC,UCL/BU,EANA,SAACtB,GAAD,OACb,8BACE,uBAAOG,MAAOH,EAAMkB,OAAQb,SAAUL,EAAMuB,wBCajCC,G,MAdM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAEhBC,EAFuC,EAAdC,QAEP,QAAU,UAElC,OAAgB,OAAZF,EACK,KAGP,qBAAKG,UAAWF,EAAhB,SACGD,M,gBCXDI,EAAU,cAwBDC,EAFG,CAACC,OApBJ,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBhBC,OAfZ,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAaRI,QAVnB,SAAAC,GACd,IAAMC,EAAG,UAAMb,EAAN,YAAiBY,EAAeE,IACzC,OAAOX,IAAMY,OAAOF,IAQsBG,OAL7B,SAACF,EAAIL,GAElB,OADgBN,IAAMc,IAAN,UAAajB,EAAb,YAAwBc,GAAML,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UC6G5BW,EA1HH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACRC,EADQ,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAER5C,EAFQ,KAEC+C,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRzC,EAHQ,KAGG6C,EAHH,OAIcJ,mBAAS,IAJvB,mBAIR9B,EAJQ,KAIAmC,EAJA,OAKgBL,mBAAS,MALzB,mBAKRvB,EALQ,KAKC6B,EALD,OAMgBN,oBAAS,GANzB,mBAMRrB,EANQ,KAMC4B,EAND,KAShBC,qBAAU,WACRC,EACG1B,SACAG,MAAK,SAAAe,GAAQ,OAAIC,EAAYD,QAC/B,IA8FH,OACE,qCACE,2CACA,cAAC,EAAD,CAAcxB,QAASA,EAASE,QAASA,IACzC,6CACA,cAAC,EAAD,CAAMzB,aAzEW,SAACwD,GACpBA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,KAAMR,EACNS,OAAQN,GAGV,GAAgB,KAAZH,GAAgC,KAAdG,EACpBsD,MAAM,8CAEH,GAAIZ,EAASa,MAAK,SAAAC,GAAO,OAAIA,EAAQnD,OAASR,KAAU,CAC3D,IAAMO,EAASsC,EAASe,MAAK,SAAAD,GAAO,OAAIA,EAAQnD,OAASR,KAErDO,EAAOE,SAAWN,EACpBsD,MAAM,GAAD,OAAIzD,EAAJ,6BAGD6D,OAAOC,QAAP,iBAAyBvD,EAAOC,KAAhC,gBAEF6C,EACGZ,OAAOlC,EAAOgC,GAAIiB,GAAY1B,MAAK,SAAAiC,GAClCjB,EAAYD,EAAS5B,KAAI,SAAA0C,GAAO,OAAIA,EAAQpB,KAAOhC,EAAOgC,GAAKwB,EAAkBJ,MACjFR,GAAW,GACXD,EAAW,WAAD,OAAYa,EAAgBvD,KAA5B,wBAAgDuD,EAAgBtD,SAC1EuD,YAAW,kBAAMd,EAAW,QAAO,KACnCH,EAAW,IACXC,EAAa,OAGdiB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMnC,UAClBoB,GAAW,GACmB,MAA1Be,EAAMnC,SAASsC,OACjBnB,EAAWgB,EAAMnC,SAASC,KAAKkC,QAE/BhB,EAAW,+BAAD,OAAgC3C,EAAOC,KAAvC,YACVsC,EAAYD,EAAS/B,QAAO,SAAA6C,GAAO,OAAIA,EAAQpB,KAAOhC,EAAOgC,QAE/DyB,YAAW,WACTb,GAAW,GACXD,EAAW,QACV,aAMXG,EACGpB,OAAOuB,GACP1B,MAAK,SAAA6B,GACJb,EAAYD,EAASyB,OAAOX,IAC5BR,GAAW,GACXD,EAAW,SAAD,OAAUS,EAAQnD,OAC5BwD,YAAW,kBAAMd,EAAW,QAAO,KACnCH,EAAW,IACXC,EAAa,OAEdiB,OAAM,SAACC,GACNf,GAAW,GACXD,EAAWgB,EAAMnC,SAASC,KAAKkC,OAC/BF,YAAW,WACTb,GAAW,GACXD,EAAW,QACV,SAU2BlD,QAASA,EAASG,UAAWA,EACzDD,iBAlGe,SAACoD,GACxBP,EAAWO,EAAMiB,OAAOxE,QAiGoBK,mBA9FnB,SAACkD,GAC1BN,EAAaM,EAAMiB,OAAOxE,UA8FxB,0CACA,cAAC,EAAD,CAASc,QAASgC,EAAU/B,OAAQA,EAAQH,aAxF3B,SAAC2C,GACpB,IAAM9C,EAAO8C,EAAMiB,OAAOxE,MAE1B,GAAI8D,OAAOC,QAAP,iBAAyBtD,EAAzB,MAAmC,CACrC,IAAMgE,EAAW3B,EAASe,MAAK,SAAAD,GAAO,OAAIA,EAAQnD,OAASA,KACrDiE,EAAc5B,EAAS/B,QAAO,SAAA6C,GAAO,OAAIA,EAAQnD,OAASA,KAEhE6C,EAAejB,QAAQoC,GAAU1C,MAAK,kBAAMgB,EAAY2B,MACvDR,OAAM,kBAAMnB,EAAY2B,UAiFzB,wCACA,cAAC,EAAD,CAAQ3D,OAAQA,EAAQK,mBA9FD,SAACmC,GAC1BL,EAAUK,EAAMiB,OAAOxE,cC3B3B2E,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.417668c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = (props) => (\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>name: <input value={props.newName} onChange={props.handleNameChange}/></div>\r\n    <div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n    <div><button type=\"submit\">add</button></div>\r\n  </form>\r\n)\r\n \r\nexport default Form","import React from 'react';\r\n\r\nconst Person = (props) => (\r\n  <div>\r\n    {props.person.name} {props.person.number} <button value={props.person.name} onClick={props.handleDelete}>delete</button>\r\n  </div>\r\n)\r\n\r\nconst Persons = (props) => {\r\n  const persons = props.persons\r\n  const filter = props.filter.toLowerCase()\r\n  return (\r\n    persons.filter(person => person.name.toLowerCase().includes(filter))\r\n           .map(person => <Person key={person.name} person={person} handleDelete={props.handleDelete} />)\r\n  )\r\n}\r\n  \r\nexport default Persons","import React from 'react';\r\n\r\nconst Filter = (props) => (\r\n  <div>\r\n    <input value={props.filter} onChange={props.handleFilterChange} />\r\n  </div>\r\n)\r\n \r\nexport default Filter","import React from 'react'\r\nimport './notification.css'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n\r\n  const style = isError ? 'error' : 'message'\r\n\r\n  if (message === null)\r\n    return null\r\n  \r\n  return (\r\n    <div className={style}>\r\n      {message}\r\n    </div>\r\n  ) \r\n}\r\n \r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst _delete = objectToDelete => {\r\n  const url = `${baseUrl}/${objectToDelete.id}`\r\n  return axios.delete(url)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst functions = {getAll, create, _delete, update}\r\n\r\nexport default functions","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport contactService from './services/contactService'\r\n\r\nconst App = () => {\r\n  const [ contacts, setContacts ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ isError, setIsError ] = useState(false)\r\n\r\n  // get initial phonebook contacts \r\n  useEffect(() => {\r\n    contactService\r\n      .getAll()\r\n      .then(contacts => setContacts(contacts))\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleDelete = (event) => {\r\n    const name = event.target.value\r\n\r\n    if (window.confirm(`Remove ${name}?`)) {\r\n      const toDelete = contacts.find(contact => contact.name === name)\r\n      const newContacts = contacts.filter(contact => contact.name !== name)\r\n\r\n      contactService._delete(toDelete).then(() => setContacts(newContacts))\r\n      .catch(() => setContacts(newContacts)) \r\n    } \r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newContact = {\r\n      name: newName, \r\n      number: newNumber\r\n    }\r\n\r\n    if (newName === '' || newNumber === '') {\r\n      alert('Fill in both fields before submitting')\r\n    }\r\n    else if (contacts.some(contact => contact.name === newName)) {\r\n      const person = contacts.find(contact => contact.name === newName)\r\n\r\n      if (person.number === newNumber) {\r\n        alert(`${newName} already has that number`)\r\n      } \r\n      else {\r\n        if (window.confirm(`Update ${person.name}'s number?`)) { \r\n          // display confirmation message through the Notification component\r\n          contactService\r\n            .update(person.id, newContact).then(returnedContact => {\r\n              setContacts(contacts.map(contact => contact.id === person.id ? returnedContact : contact))\r\n              setIsError(false)\r\n              setMessage(`Changed ${returnedContact.name}'s number to ${returnedContact.number}`)\r\n              setTimeout(() => setMessage(null), 5000)\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n            // display error message\r\n            .catch((error) => {\r\n              console.log(error.response)\r\n              setIsError(true)\r\n              if (error.response.status === 400) { // 400 bad request\r\n                setMessage(error.response.data.error)\r\n              } else {\r\n                setMessage(`The server does not contain ${person.name}'s data`)\r\n                setContacts(contacts.filter(contact => contact.id !== person.id))\r\n              }\r\n              setTimeout(() => {\r\n                setIsError(false)\r\n                setMessage(null)      \r\n              }, 5000)\r\n            })\r\n        }\r\n      }\r\n    } \r\n    else {\r\n      contactService\r\n        .create(newContact)\r\n        .then(contact => {\r\n          setContacts(contacts.concat(contact))\r\n          setIsError(false)\r\n          setMessage(`Added ${contact.name}`)\r\n          setTimeout(() => setMessage(null), 5000)\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n        .catch((error) => {\r\n          setIsError(true)\r\n          setMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setIsError(false)\r\n            setMessage(null)      \r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} isError={isError}/>\r\n      <h3>Add Contact</h3>\r\n      <Form handleSubmit={handleSubmit} newName={newName} newNumber={newNumber} \r\n            handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\r\n      <h3>Contacts</h3>\r\n      <Persons persons={contacts} filter={filter} handleDelete={handleDelete} />\r\n      <h3>Filter</h3>\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}